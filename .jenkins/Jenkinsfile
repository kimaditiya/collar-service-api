pipeline {
	agent any
	tools {
        go 'go1.17.2'
    }
	environment {
        GO114MODULE = 'on'
        CGO_ENABLED = 0 
        GOPATH = "${JENKINS_HOME}/jobs/${JOB_NAME}/builds/${BUILD_ID}"
    }
	stages {
		stage("Install Dependencies") {
			steps{
				echo 'Installing dependencies'
				sh 'go version'
                sh 'go get -u golang.org/x/lint/golint'
			}
		}
		stage('Build') {
            steps {
                echo 'Compiling and building'
                sh 'go build'
            }
        }
		stage('Test') {
            steps {
                withEnv(["PATH+GO=${GOPATH}/bin"]){
                    echo 'Running vetting'
                    sh 'go vet .'
                    echo 'Running linting'
                    sh 'golint .'                
                }
            }
        }
		stage("Build and Push Image") {
			steps {
				echo 'Compiling and building'
				script {
					docker.withRegistry('http://20.100.1.191:5000','registry') {
						def images = docker.build("smf/collar-api:v1.${BUILD_NUMBER}")
						images.push("v1.${BUILD_NUMBER}")
					}
				}
				sh "docker rmi -f \$(docker images smf/collar-api -q)"
			}
		}
		stage("Proceed Deployment?") {
			steps {
				script {
					input message: 'Deploy to production?', ok: 'Yes'
				}
			}
		}
		stage("Deploying To Production") {
			steps {
				sh "sed -i 's|<tag_placeholder>|v1.${BUILD_NUMBER}|g' .jenkins/playbook.yml"
				sh "ansible-playbook -i .jenkins/inventory.yml .jenkins/playbook.yml"
			}
		}
	}
}


